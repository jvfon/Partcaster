* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: rgb(51, 51, 51);
    padding: 30px;
    
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba(202, 98, 0, 0.8), rgba(1, 163, 204, 0.8)), url("../img/strat.jpg");

    background-size: cover;
    background-position: center;
    position: relative;
    /* clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); */
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: rgb(255, 255, 255);
    text-transform: uppercase;
    backface-visibility: hidden;
    margin-bottom: 60px;
}

.heading-primary-first {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 36.4px;
    animation: UpDown 1s ease-out;
}

.heading-primary-second {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 25px;
    animation: leftToRight 1s ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 13.4px;
    animation: rightToLeft 1s ease-out;
}

@keyframes UpDown {
    0% {
        opacity: 0;
        transform: translateY(-100px);
    }
    80% {
        transform: translateY(10px);
    }
    100% {
        opacity: 1;
        transform: translateY(0px);
    }
}

@keyframes leftToRight {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }
    80% {
        transform: translateX(10px);
    }
    100% {
        opacity: 1;
        transform: translatex(0px);
    }
}

@keyframes rightToLeft {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }
    80% {
        transform: translateX(-10px);
    }
    100% {
        opacity: 1;
        transform: translatex(0px);
    }
}

@keyframes bottomUp {

    0% {
        opacity: 0;
        transform: translateY(30px);
    }
    100% {
        opacity: 1;   
        transform: translateY(0);
    }
}

h1, h2, h3 {
    text-transform: capitalize;
}

.btn:link, .btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    font-weight: 900;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all .2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background-color: #fff;
    color: black;
}

.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    animation: bottomUp .5s ease-out .75s;
    animation-fill-mode: backwards;
}

ul {
    list-style-type: none; /* removes dots */
}

a:link {
    text-decoration: none;
    color: rgb(51, 51, 51);
}

a:active {
    text-decoration: none;
    color: rgb(51, 51, 51);
}

a:hover {
    text-decoration: underline;
    color: rgb(199, 106, 0);
}

a:visited {
    text-decoration: none;
    color: rgb(128, 69, 2);
}

#background {
    width: 80%;
}

h1, h2 {
    text-align: center;
}

img {
    height: 350px;
}

main {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 500px)); /*(# or columns, size) */
    /* (auto-fill, sizepx) css figures out the amount of columns based on the size */
    /* (auto-fit, sizepx) auto-fit won't generate extra columns  */
    /*(auto-fit, minmax( )) minmax let us definea min. and max. value a picture should have */   */

    grid-template-rows: 1fr 1fr;
    height: 100vh;
    grid-template-areas:
        "box1 box2";
        
    
}

#menu {
    grid-area: box1;
    width: 60%;
    /* background-image: linear-gradient(to right bottom, rgba(202, 98, 0, 0.8), rgba(1, 163, 204, 0.8))); */
    background-color: rgba(202, 98, 0, 0.431);
    color: rgb(51, 51, 51);
    padding: 20px;
    margin: 20px 10px 20px 0px;
}

#main-part {
    grid-area: box2;
    background-color: rgba(1, 163, 204, 0.8); 
    padding: 35px;
    margin: 20px 0px 0px 10px;
    width: 80%;
}

#background {
    grid-area: box3;
}

#instructions {
    grid-area: box4;
}

#gathering-parts {
    grid-area: box5;
}